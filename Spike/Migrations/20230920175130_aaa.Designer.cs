// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spike;

#nullable disable

namespace Spike.Migrations
{
    [DbContext(typeof(SpikeContext))]
    [Migration("20230920175130_aaa")]
    partial class aaa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorV1DocumentV1", b =>
                {
                    b.Property<Guid>("AuthorsV1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentsV1Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuthorsV1Id", "DocumentsV1Id");

                    b.HasIndex("DocumentsV1Id");

                    b.ToTable("AuthorV1DocumentV1");
                });

            modelBuilder.Entity("Spike.Models.AuthorV1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VersionTag")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AuthorsV1");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9c65d02-fbd0-4d04-8f80-72434a4d8418"),
                            FirstName = "Dustin",
                            IsDeleted = false,
                            LastName = "Hickman",
                            VersionTag = new Guid("00776a78-d85f-4642-8ac6-ed41c3af0908")
                        },
                        new
                        {
                            Id = new Guid("91229e2c-080b-4278-9534-fa6e67c292f4"),
                            FirstName = "TEST",
                            IsDeleted = false,
                            LastName = "TEST",
                            VersionTag = new Guid("3310af3b-a082-4f43-8b1e-16cf518a7aca")
                        },
                        new
                        {
                            Id = new Guid("c4b55537-3a96-4fa4-b4ab-1e9370f43f1d"),
                            FirstName = "TEST2",
                            IsDeleted = false,
                            LastName = "TEST2",
                            VersionTag = new Guid("5a089d88-b3ef-4353-aa3b-b0fb7cbf23a0")
                        },
                        new
                        {
                            Id = new Guid("cb60381c-40f7-4f60-877d-8cec6e0f4f14"),
                            FirstName = "TEST3",
                            IsDeleted = false,
                            LastName = "TEST3",
                            VersionTag = new Guid("fbaf9e5f-efa2-4ab6-a13c-5dcd07374ea1")
                        },
                        new
                        {
                            Id = new Guid("bbd174a6-7b4f-433c-81b8-566cf1c256cc"),
                            FirstName = "TEST4",
                            IsDeleted = false,
                            LastName = "TEST4",
                            VersionTag = new Guid("54a0fcd2-88e8-41a3-81ad-1eab71ce67ae")
                        },
                        new
                        {
                            Id = new Guid("74ed5347-b141-4199-8d67-cf1d4518663f"),
                            FirstName = "TEST5",
                            IsDeleted = false,
                            LastName = "TEST5",
                            VersionTag = new Guid("86ab04ff-417d-4588-9d19-159a8a31b7e2")
                        });
                });

            modelBuilder.Entity("Spike.Models.DocumentHistoricV1", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VersionTag")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.ToView("DocumentHistoricV1", (string)null);
                });

            modelBuilder.Entity("Spike.Models.DocumentV1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VersionTag")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DocumentV1", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("DocumentHistoricV1");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb8ef815-7d12-429c-b722-ecf2c910d794"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 1",
                            VersionTag = new Guid("5d361d70-133f-4ea6-a4a6-38d6c093d6f2")
                        },
                        new
                        {
                            Id = new Guid("029918c4-e431-4e8f-a2f8-1126f6ba7ec9"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 2",
                            VersionTag = new Guid("361eb655-a3c9-4ba0-871c-076d2ab908ed")
                        },
                        new
                        {
                            Id = new Guid("bed71ac2-af31-4924-8705-e09506864f2c"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 3",
                            VersionTag = new Guid("c12f14e9-35e7-4ed1-b2ad-efc9f81ca987")
                        },
                        new
                        {
                            Id = new Guid("003841a5-ab79-4bdf-a542-f6f19ac7f82f"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 4",
                            VersionTag = new Guid("60c75823-d1b5-4d28-87fc-1cc6d8a6ca6b")
                        },
                        new
                        {
                            Id = new Guid("50d968af-b91d-4755-aaf2-44a0213f1579"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 5",
                            VersionTag = new Guid("a652dabf-dd83-442a-bcd8-50e8adcda9c9")
                        },
                        new
                        {
                            Id = new Guid("22137203-08ef-471d-8e72-e38a2c83493b"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 6",
                            VersionTag = new Guid("b9d61f5a-9a26-425d-8f5d-933af23ee89d")
                        },
                        new
                        {
                            Id = new Guid("46748805-5a5b-4026-a59d-5c9a5fb1f224"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 7",
                            VersionTag = new Guid("3bc0107e-e2ed-4125-84f0-72efb7077de2")
                        },
                        new
                        {
                            Id = new Guid("742ddaae-dc5e-4e17-b417-4c71edcead9f"),
                            Description = "TEST DESCRIPTION",
                            IsDeleted = false,
                            Title = "DOCUMENT 8",
                            VersionTag = new Guid("ab91b520-2db5-425d-be67-34a57fd526ca")
                        });
                });

            modelBuilder.Entity("AuthorV1DocumentV1", b =>
                {
                    b.HasOne("Spike.Models.AuthorV1", null)
                        .WithMany()
                        .HasForeignKey("AuthorsV1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spike.Models.DocumentV1", null)
                        .WithMany()
                        .HasForeignKey("DocumentsV1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
